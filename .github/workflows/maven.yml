# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        redis-image: [ "redis:6.0.20", "redis:6.2.0", "redis:7.2.4" ]

    env:
      GATEWAY_SHIELD_DATABASE_USERNAME: root
      GATEWAY_SHIELD_DATABASE_PASSWORD: xuxiaowei.com.cn
      GATEWAY_SHIELD_DATABASE: gateway_shield

      GATEWAY_SHIELD_REDIS_PASSWORD: ""

    services:
      mysql:
        image: mysql:8.0.36
        env:
          MYSQL_DATABASE: ${{ env.GATEWAY_SHIELD_DATABASE }}
          MYSQL_ROOT_PASSWORD: ${{ env.GATEWAY_SHIELD_DATABASE_PASSWORD }}
      redis:
        image: ${{ matrix.redis-image }}

    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Wait for MySQL
        run: |
          sleep 10
          until docker exec $(docker ps -qf "ancestor=mysql:8.0.36") mysqladmin ping --silent; do
              echo 'Waiting for MySQL to be available...'
              sleep 10
          done
          sleep 10

      - name: Set ENV
        shell: sh
        run: |
          docker ps
          GATEWAY_SHIELD_DATABASE_HOST=`docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -qf 'ancestor=mysql:8.0.36')`
          GATEWAY_SHIELD_REDIS_HOST=`docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -qf 'ancestor=${{ matrix.redis-image }}')`
          echo "GATEWAY_SHIELD_DATABASE_HOST=$GATEWAY_SHIELD_DATABASE_HOST"
          echo "GATEWAY_SHIELD_DATABASE_HOST=$GATEWAY_SHIELD_DATABASE_HOST" >> $GITHUB_ENV
          echo "GATEWAY_SHIELD_REDIS_HOST=$GATEWAY_SHIELD_REDIS_HOST"
          echo "GATEWAY_SHIELD_REDIS_HOST=$GATEWAY_SHIELD_REDIS_HOST" >> $GITHUB_ENV
          echo ${{ env.GATEWAY_SHIELD_DATABASE_HOST }}
          echo ${{ env.GATEWAY_SHIELD_REDIS_HOST }}

      - name: Get ENV
        shell: sh
        run: |
          echo ${{ env.GATEWAY_SHIELD_DATABASE_HOST }}
          echo ${{ env.GATEWAY_SHIELD_REDIS_HOST }}

      - name: Init MySQL
        run: |
          mysql --version
          mysql -u ${GATEWAY_SHIELD_DATABASE_USERNAME} -p${GATEWAY_SHIELD_DATABASE_PASSWORD} --host=${GATEWAY_SHIELD_DATABASE_HOST} ${GATEWAY_SHIELD_DATABASE} < sql/gateway_shield.sql

      - name: Build with Maven
        run: mvn clean package source:jar javadoc:jar -U -DskipTests=true

      - name: Run demo
        run: |
          nohup java -jar demo/target/demo-0.0.1-SNAPSHOT.jar > nohup-demo.out 2>&1 &
          sleep 20s
          cat nohup-demo.out
          curl "http://127.0.0.1:45678" && echo
          cat nohup-demo.out

      - name: Test
        run: mvn test -DskipTests=false

      - name: JaCoCo Report
        if: ${{ matrix.redis-image == 'redis:7.2.4' }}
        run: mvn jacoco:report -pl gateway

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        if: ${{ matrix.redis-image == 'redis:7.2.4' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
