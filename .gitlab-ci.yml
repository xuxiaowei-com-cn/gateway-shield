stages:
  - build
  - test
  - sync

variables:
  GROUP_ID: cn.com.xuxiaowei.shield
  ARTIFACT_ID: gateway
  VERSION: 0.0.1-SNAPSHOT
  CI_JAVA_OPTS: -Xms256m -Xmx512m

build:
  stage: build
  image: xuxiaoweicomcn/maven-mysql-client:3.6.3-openjdk-17
  variables:
    MAVEN_OPTS: >-
      -Dhttps.protocols=TLSv1.2
      -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
      -Dorg.slf4j.simpleLogger.showDateTime=true
      -Djava.awt.headless=true
    MAVEN_CLI_OPTS: >-
      --batch-mode
      --errors
      --fail-at-end
      --show-version
      --no-transfer-progress
      -DinstallAtEnd=true
      -DdeployAtEnd=true
    GATEWAY_SHIELD_DATABASE_HOST: mysql
    GATEWAY_SHIELD_DATABASE_USERNAME: root
    GATEWAY_SHIELD_DATABASE_PASSWORD: xuxiaowei.com.cn
    GATEWAY_SHIELD_DATABASE: gateway_shield
    GATEWAY_SHIELD_REDIS_HOST: redis
    GATEWAY_SHIELD_REDIS_PASSWORD: ""
  services:
    - name: mysql:8.3.0
      alias: $GATEWAY_SHIELD_DATABASE_HOST
      variables:
        MYSQL_ROOT_PASSWORD: $GATEWAY_SHIELD_DATABASE_PASSWORD
        MYSQL_DATABASE: $GATEWAY_SHIELD_DATABASE
    - name: redis:7.2.4
      alias: $GATEWAY_SHIELD_REDIS_HOST
  before_script:
    - if [ $CI_SERVER_HOST == 'gitlab.helm.xuxiaowei.cn' ]; then
      sleep 20s;
      fi
    - mysql --version
    - mysql -u ${GATEWAY_SHIELD_DATABASE_USERNAME} -p${GATEWAY_SHIELD_DATABASE_PASSWORD} --host=${GATEWAY_SHIELD_DATABASE_HOST} ${GATEWAY_SHIELD_DATABASE} < sql/init_config.sql
    - mysql -u ${GATEWAY_SHIELD_DATABASE_USERNAME} -p${GATEWAY_SHIELD_DATABASE_PASSWORD} --host=${GATEWAY_SHIELD_DATABASE_HOST} ${GATEWAY_SHIELD_DATABASE} < sql/gateway_shield.sql
  script:
    - free -h || cat /proc/meminfo
    - mvn -v
    - mvn clean package -DskipTests=true -s settings.xml
    - free -h || cat /proc/meminfo
    - nohup java -Xms128m -Xmx256m -jar demo/target/demo-0.0.1-SNAPSHOT.jar > nohup-demo.out 2>&1 &
    - sleep 20s
    - cat nohup-demo.out
    - mvn test -DskipTests=false -s settings.xml
  artifacts:
    name: build
    paths:
      - gateway/target/*.jar
  cache:
    paths:
      - .m2/repository
  tags:
    - jihulab

#build:docker:
#  stage: build
#  needs:
#    - job: build
#      artifacts: true
#  image: docker:cli
#  services:
#    - docker:dind
#  before_script:
#    - docker info
#    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#  script:
#    - ls gateway/target
#    - >-
#      docker build --pull -t "$CI_REGISTRY_IMAGE:$VERSION-$CI_PIPELINE_ID" .
#      --build-arg GROUP_ID=${GROUP_ID}
#      --build-arg ARTIFACT_ID=${ARTIFACT_ID}
#      --build-arg VERSION=${VERSION}
#      --build-arg CI_PIPELINE_URL=${CI_PIPELINE_URL}
#      --build-arg CI_JOB_ID=${CI_JOB_ID}
#      --build-arg JAVA_OPTS="${CI_JAVA_OPTS}"
#      --build-arg APP_ARGS=${APP_ARGS}
#    - docker images
#    - docker tag "$CI_REGISTRY_IMAGE:$VERSION-$CI_PIPELINE_ID" "$CI_REGISTRY_IMAGE:$VERSION"
#    - docker images
#    - docker push "$CI_REGISTRY_IMAGE:$VERSION-$CI_PIPELINE_ID"
#    - docker push "$CI_REGISTRY_IMAGE:$VERSION"
#  tags:
#    - jihulab

build:docker:
  stage: build
  image:
    name: xuxiaoweicomcn/kaniko-project-executor:v1.22.0-debug
    entrypoint: [ "" ]
  needs:
    - job: build
      artifacts: true
  before_script:
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"},\"https://index.docker.io/v1/\":{\"auth\":\"$(printf "%s:%s" ${DOCKER_USERNAME} "${DOCKER_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
  script:
    - echo $VERSION
    - /kaniko/executor version
    - /kaniko/executor --help
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --build-arg GROUP_ID=${GROUP_ID}
      --build-arg ARTIFACT_ID=${ARTIFACT_ID}
      --build-arg VERSION=${VERSION}
      --build-arg CI_PIPELINE_URL=${CI_PIPELINE_URL}
      --build-arg CI_JOB_ID=${CI_JOB_ID}
      --build-arg JAVA_OPTS="${CI_JAVA_OPTS}"
      --build-arg APP_ARGS=${APP_ARGS}
      --destination "${CI_REGISTRY_IMAGE}:${VERSION}"
      --destination "${CI_REGISTRY_IMAGE}:${VERSION}-${CI_PIPELINE_ID}"
      --destination "xuxiaoweicomcn/gateway-shield:${VERSION}"
      --destination "xuxiaoweicomcn/gateway-shield:${VERSION}-${CI_PIPELINE_ID}"
  tags:
    - jihulab

build:deploy:
  stage: build
  needs:
    - job: build:docker
  image: docker:cli
  variables:
    DOCKER_HOST: $DEPLOY_DOCKER_HOST
  script:
    - docker info
    - docker compose up -d
  environment: production
  tags:
    - lighthouse-docker

include:
  - template: Jobs/Dependency-Scanning.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml
  - template: Jobs/SAST.gitlab-ci.yml
  - /sync.yml
